{"version":3,"sources":["webpack:///src/app/pages/game/game.component.html","webpack:///src/app/pages/game/game.component.ts","webpack:///src/app/core/store/video.service.ts","webpack:///src/app/core/store/chat.service.ts","webpack:///src/app/pages/game/game.module.ts","webpack:///src/app/pages/game/piece-selector-modal/piece-selector.modal.ts","webpack:///src/app/pages/game/piece-selector-modal/piece-selector.modal.html"],"names":["router","video","GameComponent","store","chat","profile","route","modal","confirm","subs","phase","validMoves","reverseBoard","mode","squares","Array","from","length","x","i","tab","chatInput","boardSize","minRightPanelWidth","isSmall","isAdmin","yourColor","isGameOn","game","status","WHITE","BLACK","getPos","pos","getTakenPieces","color","history","filter","m","takes","map","getPiece","p","getPoints","calcPoints","reduce","acc","piece","name","points","wTime$","pipe","_","getFormattedTime","bTime$","getRemainingTime","expireTime","Date","getLast","timeStamp","startTime","minutesTimeout","Number","isNaN","nextMoveMinutes","parseInt","addMinutes","now","Math","round","getTime","BLACK_WON_BY_TIMEOUT","WHITE_WON_BY_TIMEOUT","time","sec","min","floor","hour","pad","resetGame","updateGame","revertLast","pop","lastMove","board","nextBoard","then","clearPhase","selPos","selectPiece","getValidMoves","posDes","selectSquare","console","log","isYourPiece","pieceAtPos","oriPiece","isPawnFinished","modalRef","open","size","backdrop","componentInstance","result","code","commitMove","isSelectable","includes","checkEndState","winner","title","htmlContent","WHITE_WON_BY_MATE","WHITE_WON_BY_RESIGN","BLACK_WON_BY_MATE","BLACK_WON_BY_RESIGN","yesButtonText","showNo","showCancel","otherColor","firstLoad","gameId","snapshot","paramMap","get","tokenId","user","unknownPlayer","anonymousLogin","ready","add","getGame$","subscribe","id","token1","player1","token2","player2","initSignaling","REQUESTED","joinGame","updateGamePlayer","prev","curr","tabChange$","changeTab","onResize","unsubscribe","endSignaling","width","panel","nativeElement","getBoundingClientRect","height","text","navigate","res","endGame","DRAW","posOri","promotedPieceCode","makeMove","newTab","localStream","initMedia","sendMsg","playerNum","videoStatus","selector","templateUrl","styleUrls","encapsulation","None","VideoService","afAuth","afs","growl","CONSTRAINTS","audio","PEER_CONFIG","iceServers","urls","OFFER_OPTIONS","iceRestart","offerToReceiveAudio","offerToReceiveVideo","RTCPeerConnection","window","statusText","myICECandidates","sdpPromise","Promise","resolve","sdpPromiseResolve","MAX_TIMEOUT","MAX_ICE_TIMEOUT","gameDoc","doc","game$","sub1","videoStatusChange","sub2","offer","offerChanged","sub3","answer","answerChanged","offerSDP","answerOffer","answerSDP","acknowledgeAnswer","prevStatus","startOffer","updateStatus","showRingAlert","connexionTimeout","setTimeout","error","hangup","clearTimeouts","terminate","update","noButtonText","answerCall","next","navigator","mediaDevices","getUserMedia","tracks","getVideoTracks","getAudioTracks","label","peer","remoteStream","MediaStream","onicecandidate","ev","gatherICECandidate","oniceconnectionstatechange","ICEConnectionChange","ontrack","streams","getTracks","forEach","track","addTrack","initPeer","createOffer","setLocalDescription","initICEGathering","setRemoteDescription","type","sdp","createAnswer","iceTimeOut","iceGatheringState","ICEGatheringCompleted","newICE","candidate","sdpMid","sdpMLineIndex","push","clearInterval","localDescription","iceConnectionState","close","stop","providedIn","ChatService","owner","order","timeMsg","routes","path","component","data","noLogin","children","GameModule","forChild","declarations","imports","PieceSelectorModal","activeModal"],"mappings":"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","file":"src-app-pages-game-game-module-es5.js","sourcesContent":["<div class=\"panel\" [class.is-small]=\"isSmall\" #panel>\n  <!--<div class=\"left-side\" style=\"opacity: 0\">-->\n  <div class=\"left-side\">\n\n    <div class=\"marks-h\" [show]=\"!reverseBoard\"><i>a</i><i>b</i><i>c</i><i>d</i><i>e</i><i>f</i><i>g</i><i>h</i></div>\n    <div class=\"marks-h\" [show]=\"reverseBoard\"> <i>h</i><i>g</i><i>f</i><i>e</i><i>d</i><i>c</i><i>b</i><i>a</i></div>\n    <div class=\"marks-v\" [style.height.px]=\"boardSize\" [show]=\"!reverseBoard\"><i>8</i><i>7</i><i>6</i><i>5</i><i>4</i><i>3</i><i>2</i><i>1</i></div>\n    <div class=\"marks-v\" [style.height.px]=\"boardSize\" [show]=\"reverseBoard\"> <i>1</i><i>2</i><i>3</i><i>4</i><i>5</i><i>6</i><i>7</i><i>8</i></div>\n\n    <div class=\"board\" *ngIf=\"game\" [style.width.px]=\"boardSize\" [style.height.px]=\"boardSize\">\n      <div class=\"square\" *ngFor=\"let pos of squares\" [ngClass]=\"store.squareColor(pos)\">\n        <!--{{getPos(pos)}} - {{store.square2D(pos) | json}}={{store.getPiece(game.board[pos]) | json }}-->\n        <!--{{getPos(pos)}}-->\n        <div class=\"selector\"\n             [class.is-selectable]=\"isSelectable(getPos(pos))\"\n             [class.selected]=\"selPos === getPos(pos)\"\n             (click)=\"selectSquare(getPos(pos))\">\n          <span *ngIf=\"phase === 1 && validMoves.includes(getPos(pos))\"\n                class=\"move-mark\" [class.has-piece]=\"game.board[getPos(pos)] > 0\">\n          </span>\n          <img *ngIf=\"game.board[getPos(pos)] > 0\" [src]=\"store.getPiece(game.board[getPos(pos)]).img\">\n        </div>\n      </div>\n    </div>\n  </div>\n\n  <div class=\"right-side\">\n    <div class=\"game-info\">\n      <div class=\"admin-buttons-row marB15\" *ngIf=\"isAdmin()\">\n        <jb-btn jbText=\"RESET\" jbType=\"add\" (jbClick)=\"resetGame()\"></jb-btn>\n        <jb-btn jbText=\"UNDO\" jbType=\"back\" (jbClick)=\"revertLast()\"></jb-btn>\n      </div>\n      <div class=\"buttons-row\">\n        <jb-btn jbTooltip=\"view.game.turn\" jbIcon=\"icon-loop\" (jbClick)=\"reverseBoard = !reverseBoard\"></jb-btn>\n        <jb-btn *ngIf=\"isAdmin()\" jbTooltip=\"view.game.analyse\" jbIcon=\"icon-pencil5\" (jbClick)=\"mode = 'analyse'\"></jb-btn>\n        <jb-btn *ngIf=\"isAdmin()\" jbTooltip=\"view.game.prev_move\" jbIcon=\"icon-arrow-left6\"></jb-btn>\n        <jb-btn *ngIf=\"isAdmin()\" jbTooltip=\"view.game.next_move\" jbIcon=\"icon-arrow-right3\"></jb-btn>\n        <jb-btn *ngIf=\"isAdmin()\" jbTooltip=\"view.game.reset\" jbIcon=\"icon-flag7\"></jb-btn>\n        <jb-btn *ngIf=\"isGameOn()\" jbTooltip=\"view.game.finish_tooltip\" jbIcon=\"icon-finish\" (jbClick)=\"finishGame()\"></jb-btn>\n        <jb-btn *ngIf=\"isAdmin()\"\n                class=\"back-btn quaternary marL20\" jbTooltip=\"view.game.back_tooltip\"\n                jbIcon=\"icon-undo2\" jbText=\"view.common.back\"\n                (jbClick)=\"router.navigate(['/games'])\">\n        </jb-btn>\n      </div>\n\n      <div class=\"marT30\" *ngIf=\"game\">\n        <div class=\"d-flex\">\n          <h2 class=\"flex-1 text-center\">{{game.playerName1}}</h2>\n          <h2 class=\"flex-1 text-center\">{{game.playerName2}}</h2>\n        </div>\n        <div class=\"d-flex\">\n          <h4 class=\"flex-1 text-center\">(WHITE)</h4>\n          <h4 class=\"flex-1 text-center\">(BLACK)</h4>\n        </div>\n        <div class=\"d-flex game-points\">\n          <h4 class=\"flex-1 text-center\">{{ wTime$ | async }}</h4>\n          <h4 class=\"flex-1 text-center\">{{ bTime$ | async }}</h4>\n        </div>\n        <div class=\"d-flex game-points marB10\">\n          <span class=\"flex-1 text-center\">{{ getPoints('WHITE') }}</span>\n          <span class=\"flex-1 text-center\">{{ getPoints('BLACK') }}</span>\n        </div>\n        <div class=\"d-flex\">\n          <div class=\"taken-pieces\">\n            <img *ngFor=\"let piece of getTakenPieces('BLACK')\" [src]=\"piece?.img\">\n          </div>\n          <div class=\"taken-pieces\">\n            <img *ngFor=\"let piece of getTakenPieces('WHITE')\" [src]=\"piece?.img\">\n          </div>\n        </div>\n        <!--<p *ngIf=\"game?.status === yourColor\">{{game.playerName1}} ({{yourColor}}) play</p>-->\n      </div>\n    </div>\n\n\n\n    <div class=\"tab-headers\" *ngIf=\"game\">\n      <div class=\"tab-header\" [class.selected]=\"tab === 'moves'\" (click)=\"changeTab('moves')\" translate>views.game.tabs.moves</div>\n      <div class=\"tab-header\" [class.selected]=\"tab === 'chat'\"  (click)=\"changeTab('chat')\"  translate>views.game.tabs.chat</div>\n      <div class=\"tab-header\" [class.selected]=\"tab === 'video'\" (click)=\"changeTab('video')\" translate>views.game.tabs.video</div>\n    </div>\n    <div class=\"tab-body\" *ngIf=\"game\" [class.video]=\"tab === 'video'\" [class]=\"getVideoStatusClass()\">\n      <div *ngIf=\"tab === 'moves'\">\n        <div *ngIf=\"game?.history\" style=\"font-family: monospace\">\n          <div *ngFor=\"let move of game.history.slice().reverse(); let ind = index\">\n            {{game.history.length - ind}} - {{ move.note }} - posOri={{move.posOri}}, posDes={{move.posDes}}\n            <span> - ({{move.piece.color}})</span>\n            <span *ngIf=\"move.takes\">, TAKES={{move.takes}}</span>\n          </div>\n        </div>\n      </div>\n\n      <div *ngIf=\"tab === 'chat'\">\n        <div *ngIf=\"game?.chat\">\n          <p *ngFor=\"let msg of game.chat\">\n            <span>{{msg.owner === yourColor ? '(me): ' : '(' + (yourColor === 'WHITE' ? game.playerName2 : game.playerName1) + '): ' }}</span>\n            <span>{{msg.text}}</span>\n          </p>\n        </div>\n      </div>\n      <div *ngIf=\"tab === 'video'\" [jbLoadingSpinner]=\"getVideoStatusClass() === 'connecting'\">\n        <div class=\"video-buttons\">\n          <jb-btn *ngIf=\"!video.localStream\" jbText=\"Turn Camera On\" (jbClick)=\"video.initMedia()\"></jb-btn>\n          <jb-btn *ngIf=\"video.videoStatus !== ''\" jbText=\"Hang Up\" (jbClick)=\"video.hangup()\"></jb-btn>\n          <jb-btn *ngIf=\"video.videoStatus === ''\" jbText=\"Make Call\" (jbClick)=\"video.makeCall()\"></jb-btn>\n          <jb-btn *ngIf=\"canAnswerCall()\" jbText=\"Answer Call\" (jbClick)=\"video.answerCall()\"></jb-btn>\n          <jb-label class=\"padL15 value-inline\" jbText=\"Status\" [jbValue]=\"video.statusText\"></jb-label>\n        </div>\n        <video class=\"local-video\"  playsinline autoplay muted [srcObject]=\"video.localStream\"></video>\n        <video class=\"remote-video\" playsinline autoplay       [srcObject]=\"video.remoteStream\"></video>\n      </div>\n    </div>\n    <div class=\"tab-footer\">\n      <div class=\"chat-input-row\" *ngIf=\"tab === 'chat'\">\n        <jb-input class=\"flat w-100 padR10\" [jbAutoFocus]=\"true\" [(ngModel)]=\"chatInput\" (jbOnEnter)=\"sendMsg()\"></jb-input>\n        <jb-btn jbType=\"update-icon\" (jbClick)=\"sendMsg()\"></jb-btn>\n      </div>\n      <div class=\"marH5\">{{getStatusText()}}</div>\n    </div>\n\n\n  </div>\n</div>\n\n\n","import {Component, ElementRef, HostListener, OnDestroy, OnInit, ViewChild, ViewEncapsulation} from '@angular/core';\nimport {ActivatedRoute, Router} from \"@angular/router\";\nimport {EGameStatus, StoreService} from \"@core/store/store.service\";\nimport {JbProfileService} from \"@core/common/jb-profile.service\";\nimport {NgbModal} from \"@ng-bootstrap/ng-bootstrap\";\nimport {PieceSelectorModal} from \"./piece-selector-modal/piece-selector.modal\";\nimport {JbConfirmService} from \"jb-ui-lib\";\nimport {interval} from \"rxjs\";\nimport {distinctUntilChanged, map, take} from \"rxjs/operators\";\nimport {SubSink} from \"subsink\";\nimport {ChatService} from \"@core/store/chat.service\";\nimport {VideoService} from \"@core/store/video.service\";\n\n\n@Component({\n  selector: 'jb-game',\n  templateUrl: './game.component.html',\n  styleUrls: ['./game.component.scss'],\n  encapsulation: ViewEncapsulation.None\n})\nexport class GameComponent implements OnInit, OnDestroy {\n  private subs = new SubSink();\n  public gameId;\n  public game;\n  public yourColor: 'WHITE' | 'BLACK';\n  public otherColor: 'WHITE' | 'BLACK';\n  public phase = 0; // 0=select piece, 1=select destination\n  public selPos;    // Position of the selected piece (to move)\n  public validMoves = []; // Valid destination nums for the selected piece\n  public reverseBoard = false;  // false=white at the bottom, true=black at the bottom\n  public mode = 'play'; // play=make next move,  analyse=play both (no commit)\n\n  public squares = Array.from({ length: 64 }, (x, i) => i);\n\n  tab = 'moves';\n  chatInput = '';\n\n  constructor(\n    public store: StoreService,\n    public chat: ChatService,\n    public profile: JbProfileService,\n    public router: Router,\n    private route: ActivatedRoute,\n    private modal: NgbModal,\n    private confirm: JbConfirmService,\n    public video: VideoService,\n  ) {\n  }\n\n  async ngOnInit() {\n    let firstLoad = true;\n    this.gameId = this.route.snapshot.paramMap.get('gameId');\n    const tokenId = this.route.snapshot.paramMap.get('tokenId');\n    console.log('GAME ID:', this.gameId, 'TOKEN ID:', tokenId);\n\n    if (!this.profile.user) {\n      if (!tokenId) { this.unknownPlayer() }\n      await this.profile.anonymousLogin(); // Generate anonymous user if none\n    }\n\n    await this.profile.ready;\n\n    // 1st game load\n    this.subs.add(this.store.getGame$(this.gameId).pipe(take(1)).subscribe(game => {\n      console.log('My profile ID:', this.profile.user.id);\n\n      // Determine who you are (player 1 or 2)\n      if (game.token1 === tokenId || game.player1 === this.profile.user.id) { this.yourColor = 'WHITE'; }\n      if (game.token2 === tokenId || game.player2 === this.profile.user.id) { this.yourColor = 'BLACK'; }\n      if (!this.yourColor) { this.unknownPlayer(); } // If this is not your game, get out\n      this.otherColor = this.yourColor === 'BLACK' ? 'WHITE' :'BLACK';\n      this.reverseBoard = this.yourColor === 'BLACK';\n\n      this.video.initSignaling(this.gameId, this.yourColor);\n      // this.changeTab('video');\n    }));\n\n    // Subscribe to game's changes\n    this.subs.add(this.store.getGame$(this.gameId).subscribe(game => {\n      this.game = { ...game, id: this.gameId };\n\n      // Join the requested game\n      if (game.token2 === tokenId) {\n        if (game.status === EGameStatus.REQUESTED) { this.store.joinGame(this.game); }\n        if (game.player2 !== this.profile.user.id) { this.store.updateGamePlayer(this.game); }\n      }\n    }));\n\n    // Subscribe to game's status changes\n    this.subs.add(this.store.getGame$(this.gameId).pipe(\n      distinctUntilChanged((prev, curr) => prev.status === curr.status)\n    ).subscribe(game => {\n      console.log(new Date(), 'GAME STATUS CHANGE', this.game.status);\n      if (!firstLoad) { this.checkEndState(game); } // Check if check mate (opponent's won)\n      firstLoad = false;\n    }));\n\n    this.subs.add(this.video.tabChange$.subscribe(tab => this.changeTab(tab)));\n\n    this.onResize();\n\n    // Constantly check the move timeout. TODO: Move this to a cloud function\n    this.subs.add(interval(1000).subscribe(_ => {\n      if (this.getRemainingTime() < 0) {\n        if (this.game.status === EGameStatus.WHITE) {\n          this.game.status = EGameStatus.BLACK_WON_BY_TIMEOUT;\n          this.store.updateGame(this.game);\n        }\n        if (this.game.status === EGameStatus.BLACK) {\n          this.game.status = EGameStatus.WHITE_WON_BY_TIMEOUT;\n          this.store.updateGame(this.game);\n        }\n      }\n    }));\n  }\n\n  ngOnDestroy() { this.subs.unsubscribe(); this.video.endSignaling(); }\n\n  public boardSize = 500;\n  public minRightPanelWidth = 500;\n  public isSmall = false;\n  @ViewChild('panel', { static: true }) panel: ElementRef<HTMLElement>;\n\n  @HostListener('window:resize', ['$event']) onResize() {\n    const width = this.panel.nativeElement.getBoundingClientRect().width;\n    const height = this.panel.nativeElement.getBoundingClientRect().height;\n    this.isSmall = width < 1000;  // Small screen mode\n    if (this.isSmall) {\n      this.boardSize = Math.round(Math.min(width, height));\n    } else {\n      this.boardSize = Math.round(Math.min(width - this.minRightPanelWidth, height));\n    }\n  }\n\n  unknownPlayer() {\n    this.confirm.open({\n      title         : 'view.game.unknown_player',\n      text          : 'view.game.unknown_player',\n      yesButtonText : 'view.common.ok',\n      showNo        : false,\n    }).then(() => {\n      this.router.navigate(['home']);\n    });\n  }\n\n  isAdmin = () => this.yourColor === 'WHITE';\n  isGameOn = () => this.game?.status === EGameStatus.WHITE || this.game?.status === EGameStatus.BLACK;\n\n  finishGame() {\n    this.confirm.open({\n      title         : 'view.game.finish_tooltip',\n      text          : 'view.game.finish_confirmation',\n      showCancel: false,\n      showNo: true,\n    }).then(res => {\n      if (res === 'yes') { this.store.endGame(this.game, this.profile.user.id); }\n    }, () => {});\n  }\n\n  getStatusText() {\n    if (this.game?.status === EGameStatus.REQUESTED) { return 'Awaiting player to join the game'; }\n    if (this.game?.status === EGameStatus.WHITE) {\n      if (this.yourColor === 'WHITE') { return 'You (white) play'; }\n      if (this.yourColor === 'BLACK') { return 'White plays (wait for it)'; }\n    }\n    if (this.game?.status === EGameStatus.BLACK) {\n      if (this.yourColor === 'WHITE') { return 'Black plays (wait for it)'; }\n      if (this.yourColor === 'BLACK') { return 'You (black) play' }\n    }\n    if (this.game?.status === EGameStatus.DRAW) { return 'Game finished, ended in Draw'; }\n    if (this.game?.status === EGameStatus.WHITE_WON_BY_MATE)    { return 'Game finished, white won by mate'; }\n    if (this.game?.status === EGameStatus.WHITE_WON_BY_TIMEOUT) { return 'Game finished, white won by timeout'; }\n    if (this.game?.status === EGameStatus.WHITE_WON_BY_RESIGN)  { return 'Game finished, white won by resignation'; }\n    if (this.game?.status === EGameStatus.BLACK_WON_BY_MATE)    { return 'Game finished, black won by mate'; }\n    if (this.game?.status === EGameStatus.BLACK_WON_BY_TIMEOUT) { return 'Game finished, black won by timeout'; }\n    if (this.game?.status === EGameStatus.BLACK_WON_BY_RESIGN)  { return 'Game finished, black won by resignation'; }\n    return '';\n  }\n\n\n\n  // White player (reverseBoard=false) --> pos = pos\n  // Black player (reverseBoard=true) ---> pos = 64 - pos\n  public getPos = (pos) => !this.reverseBoard ? pos : 63 - pos;\n\n\n  // Returns an array of the taken pieces of the given color\n  public getTakenPieces = (color) => {\n    return this.game.history.filter(m => m.takes).map(m => this.store.getPiece(m.takes)).filter(p => p.color === color);\n  };\n\n\n  // Returns the points ahead for the winning player (if <= 0 an empty string is displayed)\n  public getPoints = (color) => {\n    const calcPoints = (color) => {\n      return this.getTakenPieces(color).reduce((acc, piece) => {\n        if (piece.name === 'pawn')   { return acc + 1; }\n        if (piece.name === 'knight') { return acc + 3; }\n        if (piece.name === 'bishop') { return acc + 3; }\n        if (piece.name === 'rook')   { return acc + 5; }\n        if (piece.name === 'queen')  { return acc + 9; }\n        return 0;\n      }, 0);\n    };\n    let points = calcPoints(color === 'WHITE' ? 'BLACK': 'WHITE') - calcPoints(color);\n    if (points > 0) { return '+' + points; }\n    return '';\n  };\n\n\n  // Calculate the remaining times for the players moves\n  public wTime$ = interval(200).pipe(map(_ => this.getFormattedTime('WHITE')));\n  public bTime$ = interval(200).pipe(map(_ => this.getFormattedTime('BLACK')));\n  public getRemainingTime = () => {\n    if (this.game) {\n      let expireTime = new Date(this.game.history.getLast()?.timeStamp || this.game.startTime);\n      // console.log('this.game.nextMoveMinutes -------------->', this.game.nextMoveMinutes);\n      const minutesTimeout = Number.isNaN(this.game.nextMoveMinutes) ? 30000 : Number.parseInt(this.game.nextMoveMinutes, 10);\n      expireTime.addMinutes(minutesTimeout); // <--- TIME FOR THE NEXT MOVE\n      const now = new Date();\n      return Math.round((expireTime.getTime() - now.getTime()) / 1000);\n    } else {\n      return 1;\n    }\n  }\n  public getFormattedTime = (color) => {\n    if (this.game.status === EGameStatus.BLACK_WON_BY_TIMEOUT && color === 'WHITE') { return 'Timeout'; }\n    if (this.game.status === EGameStatus.WHITE_WON_BY_TIMEOUT && color === 'BLACK') { return 'Timeout'; }\n    const time = this.getRemainingTime();\n    if (this.game.status !== color) { return '--:--:--'; }  // If not your turn, or draw.\n    const sec = time % 60;\n    const min = Math.floor((time - sec) / 60) % 60;\n    const hour = Math.floor((time - min - sec) / 3600);\n    // const day = Math.floor((time - hour - min - sec) / 86400);\n    return `${hour.pad(2)}:${min.pad(2)}:${sec.pad(2)}`;\n  }\n\n\n\n\n  public resetGame = () => {\n    this.store.resetGame(this.game);\n    this.store.updateGame(this.game);\n  }\n\n  public revertLast = () => {\n    this.game.history.pop();\n    const lastMove = this.game.history.getLast();\n    if (lastMove) {\n      this.game.board = [...lastMove.nextBoard];\n      this.game.status = this.game.status === EGameStatus.WHITE ? EGameStatus.BLACK : EGameStatus.WHITE;\n    } else {\n      this.store.resetGame(this.game);\n    }\n    this.store.updateGame(this.game).then(() => this.clearPhase());\n  }\n\n  private clearPhase = () => {\n    this.selPos = null;\n    this.validMoves = [];\n    this.phase = 0;\n  }\n  private selectPiece = (pos) => {\n    this.selPos = pos;\n    this.validMoves = this.store.getValidMoves(this.game, pos).map(m => m.posDes);\n    this.phase = 1;\n  };\n\n  public selectSquare = (pos) => {\n    if (this.yourColor !== this.game.status) { return console.log('NOT YOUR TURN, PLEASE WAIT'); }\n\n    if (this.phase === 0) { // Select a piece to move\n      if (this.isYourPiece(pos)) { this.selectPiece(pos); }\n\n    } else {  // Select destination\n      if (this.selPos === pos) { return this.clearPhase(); }  // unselect the same piece\n\n      const pieceAtPos = this.store.getPiece(this.game.board[pos]);\n      if (pieceAtPos.color === this.yourColor) { this.selectPiece(pos); } // Selecting another of your pieces (switch selection)\n      if (pieceAtPos.color !== this.yourColor) {\n\n        const oriPiece = this.store.getPiece(this.game.board[this.selPos]); // Moving pawn\n        if (this.store.isPawnFinished(this.selPos, pos, oriPiece)) { // Select a promoted piece for a pawn\n          const modalRef = this.modal.open(PieceSelectorModal, { size: 'md', backdrop: 'static' });\n          modalRef.componentInstance.color = this.yourColor;\n          modalRef.result.then(code => this.commitMove(this.game, this.selPos, pos, code)).finally(() => this.clearPhase());\n\n        } else { // Make the move\n          this.commitMove(this.game, this.selPos, pos).then(() => this.clearPhase());\n        }\n      }\n    }\n  };\n\n  public isSelectable = (pos) => {\n    if (this.yourColor !== this.game?.status) { return false; }\n    if (this.phase === 0) { return this.isYourPiece(pos); } // Select piece\n    if (this.phase === 1) { return this.isYourPiece(pos) || this.validMoves.includes(pos); } // Select destination\n  };\n\n  public isYourPiece = (pos) => {\n    if (this.game.board[pos] === 0) { return false; }\n    const piece = this.store.getPiece(this.game.board[pos]);\n    return piece.color === this.yourColor;\n  }\n\n  public commitMove(game, posOri, posDes, promotedPieceCode?) {\n    this.store.makeMove(game, posOri, posDes, promotedPieceCode);\n    this.checkEndState(game);\n    return this.store.updateGame(game);\n  }\n\n\n  // Check if the game is finished, and prompt the (win / lose) popup to notify it\n  public checkEndState = (game) => {\n    let winner, title, htmlContent;\n    switch (game.status) {\n      case EGameStatus.WHITE_WON_BY_MATE:     winner = 'WHITE'; title = 'view.game.check_mate'; break;\n      case EGameStatus.WHITE_WON_BY_TIMEOUT:  winner = 'WHITE'; title = 'view.game.win_by_timeout'; break;\n      case EGameStatus.WHITE_WON_BY_RESIGN:   winner = 'WHITE'; title = 'view.game.win_by_resign'; break;\n      case EGameStatus.BLACK_WON_BY_MATE:     winner = 'BLACK'; title = 'view.game.check_mate'; break;\n      case EGameStatus.BLACK_WON_BY_TIMEOUT:  winner = 'BLACK'; title = 'view.game.win_by_timeout'; break;\n      case EGameStatus.BLACK_WON_BY_RESIGN:   winner = 'BLACK'; title = 'view.game.win_by_resign'; break;\n      default: break;\n    }\n\n    if (this.yourColor === winner) {\n      htmlContent = '<h4 class=\"text-center\">Congratulations, you won!</h4>';\n      this.confirm.open({ title, htmlContent, yesButtonText: 'view.common.ok', showNo: false, showCancel: false });\n    }\n    if (this.otherColor === winner) {\n      htmlContent = '<h4 class=\"text-center\">Sorry, you lost.</h4>';\n      this.confirm.open({ title, htmlContent, yesButtonText: 'view.common.ok', showNo: false, showCancel: false });\n    }\n  }\n\n\n  changeTab(newTab = 'moves') {\n    this.tab = newTab;\n    if (this.tab === 'video' && !this.video.localStream) { this.video.initMedia(); }\n  }\n\n  /// ------------ CHAT -------------\n  sendMsg() {\n    this.chat.sendMsg(this.game, this.chatInput, this.yourColor);\n    this.chatInput = '';\n  }\n\n  canAnswerCall() {\n    return (this.video.playerNum === 1 && this.video.videoStatus === 'A<-B')\n        || (this.video.playerNum === 2 && this.video.videoStatus === 'A->B');\n  }\n\n  getVideoStatusClass() {\n    if (!this.video.videoStatus) { return 'off'; }\n    if (this.video.videoStatus === 'A==B') { return 'connected'; }\n    return 'connecting';\n  }\n}\n","import {Injectable} from \"@angular/core\";\nimport {IGameDoc, StoreService} from \"@core/store/store.service\";\nimport {JbProfileService} from \"@core/common/jb-profile.service\";\nimport {AngularFireAuth} from \"@angular/fire/auth\";\nimport {AngularFirestore} from \"@angular/fire/firestore\";\nimport {distinctUntilChanged, pluck} from \"rxjs/operators\";\nimport {JbConfirmService, JbGrowlService} from \"jb-ui-lib\";\nimport {BehaviorSubject} from \"rxjs\";\n\n/*** Player 1 calls player 2:\n - Both are idle: video.status = '';\n - Player 1 makes a call changing the ----> video.status = 'A-> ';\n - Player 2 detects that 1 is calling, and starts ringing. It changes the ----> video.status = 'A->B';\n - Player 2 answers the call, changing the ----> video.status = 'A>>B'.\n - ICE Candidate gathering process happens for Player 1\n - Player 1 detects that and the WebRTC process starts -----> video.offerSDP = 'xxxx'\n - ICE Candidate gathering process happens for Player 2\n - Player 2 detects the offer SDP, and generates answer ----> video.answerSDP = 'xxxx'\n - Once the WebRTC is ready (ontrack) the remote stream is displayed on the html.\n Player 1 detects it and updates the status ----> video.status = 'A==B';\n - Player 1 stops the call updating ----> video.status = '    ';\n - Player 2 detects it and stops the call too.\n */\n\n/*** Player 1 calls, but player 2 rejects:\n - Both are idle: video.status = '';\n - Player 1 makes a call changing the ----> video.status = 'A-> ';\n - Player 2 detects that 1 is calling, and starts ringing. It changes the ----> video.status = 'A->B';\n - Player 2 rejects the call, changing the ----> video.status = '    '.\n - Player 1 detects that and stops the call\n */\n\n\n@Injectable({ providedIn: 'root', })\nexport class VideoService {\n  sub1; sub2; sub3;\n  CONSTRAINTS = {\n    audio: true,\n    video: true,\n  };\n  PEER_CONFIG = { iceServers: [\n    { urls: 'stun:stun.l.google.com:19302'  },\n    { urls: 'stun:stun1.1.google.com:19302' },\n    { urls: 'stun:stun2.1.google.com:19302' },\n  ]};\n  OFFER_OPTIONS = {\n    iceRestart: true,\n    offerToReceiveAudio: true,\n    offerToReceiveVideo: true,\n  };\n  RTCPeerConnection = window['RTCPeerConnection'] || window['mozRTCPeerConnection'] || window['webkitRTCPeerConnection'];\n\n  peer;          // local peer connection\n  localStream;\n  remoteStream;\n\n  statusText = 'Off';\n  videoStatus = ''; /***\n    ''     No call\n    'A-> ' A calling B              ' <-B' B calling A\n    'A->B' A calling B (Ringing)    'A<-B' B calling A (Ringing)\n    'A>>B' WebRTC connecting        'A<<B' WebRTC connecting\n    'A==B' Connected   */\n\n\n  gameDoc;        // Reference to the\n  playerNum: number;  // 1=White(A), 2=Black(B)\n\n  myICECandidates = [];\n  sdpPromiseResolve;\n  sdpPromise = new Promise(resolve => this.sdpPromiseResolve = resolve);\n\n  MAX_TIMEOUT = 15*1000;      // If the connection process takes longer than this, just abort it\n  MAX_ICE_TIMEOUT = 8*1000;   // If the ICE Gathering process takes longer than this, try with the current candidates\n  connexionTimeout;\n  iceTimeOut;\n\n  tabChange$ = new BehaviorSubject('moves'); // To force the UI to change the video tab\n\n  constructor(\n    private profile: JbProfileService,\n    private store: StoreService,\n    private afAuth: AngularFireAuth,\n    private afs: AngularFirestore,\n    private growl: JbGrowlService,\n    private confirm: JbConfirmService,\n  ) {}\n\n  initSignaling(gameId, yourColor) {\n    this.playerNum = yourColor === 'WHITE' ? 1 : 2;\n    this.gameDoc = this.afs.doc<IGameDoc>('games/' + gameId);\n    const game$ = this.store.getGame$(gameId);\n\n    if (!this.sub1) { this.sub1 = game$.pipe(pluck('videoStatus'), distinctUntilChanged()).subscribe(video => this.videoStatusChange(video)); }\n    if (!this.sub2) { this.sub2 = game$.pipe(pluck('offerSDP'), distinctUntilChanged()).subscribe(offer => this.offerChanged(offer)); }\n    if (!this.sub3) { this.sub3 = game$.pipe(pluck('answerSDP'), distinctUntilChanged()).subscribe(answer => this.answerChanged(answer)); }\n  }\n\n\n  endSignaling() {\n    if (this.sub1) { this.sub1.unsubscribe(); }\n    if (this.sub2) { this.sub2.unsubscribe(); }\n    if (this.sub3) { this.sub3.unsubscribe(); }\n  }\n\n  async offerChanged(offerSDP) {\n    if (offerSDP) {\n      if (this.playerNum === 1 && this.videoStatus === 'A<<B') { await this.answerOffer(offerSDP); } // WebRTC: Player 2 is sending the offer, answer it\n      if (this.playerNum === 2 && this.videoStatus === 'A>>B') { await this.answerOffer(offerSDP); } // WebRTC: Player 1 is sending the offer, answer it\n    }\n  }\n  async answerChanged(answerSDP) {\n    if (answerSDP) {\n      if (this.playerNum === 1 && this.videoStatus === 'A>>B') { await this.acknowledgeAnswer(answerSDP); } // WebRTC: Player 2 answered the offer. Acknowledge it\n      if (this.playerNum === 2 && this.videoStatus === 'A<<B') { await this.acknowledgeAnswer(answerSDP); } // WebRTC: Player 1 answered the offer. Acknowledge it\n    }\n  }\n\n  async videoStatusChange(status) {\n    const prevStatus = this.videoStatus;\n    if (prevStatus !== status) { console.log(new Date(), `VIDEO status ${prevStatus} ===> '${status}'`); }\n    this.statusText = status;\n\n    // Player 1 --- calling ---> Player 2\n    if (this.playerNum === 1) {\n      if (status === 'A-> ') { this.statusText += ' - You are sending a call'; }\n      if (status === 'A->B') { this.statusText += ' - The other end is RINGING'; }\n      if (status === 'A>>B' && prevStatus === 'A->B') { await this.startOffer(); } // Signaling: Player 2 wants to join the call. Start WebRTC offer\n    }\n    if (this.playerNum === 2) {\n      if (status === 'A-> ') { this.updateStatus('A->B'); this.statusText += ' - New Incoming Call'; } // Start ringing\n      if (status === 'A->B') { this.statusText += ' - RING RING! You are receiving a call. Want to answer?'; this.showRingAlert(); }\n    }\n\n    // Player 2 --- calling ---> Player 1\n    if (this.playerNum === 2) {\n      if (status === ' <-B') { this.statusText += ' - You are sending a call'; }\n      if (status === 'A<-B') { this.statusText += ' - The other end is RINGING'; }\n      if (status === 'A<<B' && prevStatus === 'A<-B') { await this.startOffer(); }  // Signaling: Player 1 wants to join the call. Start WebRTC offer\n    }\n    if (this.playerNum === 1) {\n      if (status === ' <-B') { this.updateStatus('A<-B'); this.statusText += ' - New Incoming Call'; } // Start ringing\n      if (status === 'A<-B') { this.statusText += ' - RING RING! You are receiving a call. Want to answer?'; this.showRingAlert(); }\n    }\n\n    // Init the timeout when starting the webrtc connection\n    if ((prevStatus === 'A->B' && status === 'A>>B') || (prevStatus === 'A<-B' && status === 'A<<B')) {\n      this.connexionTimeout = setTimeout(() => {\n        console.log('TIMEOUT: It was not possible to establish connection');\n        this.growl.error('Something went wrong, please try again later');\n        this.hangup();\n      }, this.MAX_TIMEOUT);\n    }\n\n    if (status === 'A>>B') { this.statusText += ' - Connecting...'; }\n    if (status === 'A<<B') { this.statusText += ' - Connecting...'; }\n    if (status === 'A==B') {\n      this.statusText += ' - On Call';\n      this.clearTimeouts();\n    }\n\n    if (status === '') { this.statusText += 'Off'; }\n    if (prevStatus !== '' && status === '') {\n      this.statusText += ' - The call has been terminated';\n      this.terminate();\n    }\n    this.videoStatus = status;\n  }\n\n  makeCall() {\n    if (this.videoStatus !== '') { this.growl.error(`There is another ongoing call ${this.videoStatus}`); return }\n    this.gameDoc.update({ videoStatus: (this.playerNum === 1 ? 'A-> ' : ' <-B'), offerSDP: null, answerSDP: null });\n  }\n\n  showRingAlert() {\n    this.confirm.open({\n      title: 'Incoming Call',\n      text: 'Your opponent is sending you a video call. Do you want to answer it?',\n      yesButtonText: 'Yes, answer the call',\n      noButtonText: 'No, reject it',\n      showNo: true,\n    }).then(res => {\n      if (res === 'yes') { this.answerCall(); this.tabChange$.next('video'); }\n      if (res === 'no')  { this.hangup(); }\n    });\n  }\n\n  answerCall() {\n    if (this.videoStatus === 'A<-B' && this.playerNum === 1) { this.updateStatus('A<<B'); }\n    if (this.videoStatus === 'A->B' && this.playerNum === 2) { this.updateStatus('A>>B'); }\n  }\n\n  hangup() {\n    // if (this.videoStatus === '') { console.warn('No call to hang up'); return }\n    this.terminate();\n    this.myICECandidates = [];\n    return this.gameDoc.update({ videoStatus: '', offerSDP: null, answerSDP: null });\n  }\n\n  private updateStatus(status) {\n    return this.gameDoc.update({ videoStatus: status });\n  }\n\n  // ------------------ WebRTC -------------------\n\n  async initMedia() {\n    try {\n      this.localStream = await navigator.mediaDevices.getUserMedia(this.CONSTRAINTS);\n      const tracks = {\n        video: this.localStream.getVideoTracks(),\n        audio: this.localStream.getAudioTracks(),\n      };\n      if (tracks.video.length) { console.log('Using video', tracks.video[0].label); }\n      if (tracks.audio.length) { console.log('Using audio', tracks.audio[0].label); }\n\n    } catch (err) { console.error('Video - initMedia() error', err); }\n  }\n\n  private initPeer() {\n    if (!this.localStream) { this.growl.error('There is a problem with your Camera / Microphone'); }\n    this.peer = new this.RTCPeerConnection(this.PEER_CONFIG);\n    this.remoteStream = new MediaStream();\n    this.peer.onicecandidate = ev => this.gatherICECandidate(ev);\n    this.peer.oniceconnectionstatechange = ev => this.ICEConnectionChange(ev);\n    this.peer.ontrack = async (ev) => ev.streams[0].getTracks().forEach(track => this.remoteStream.addTrack(track));\n    this.localStream.getTracks().forEach(track => this.peer.addTrack(track, this.localStream));\n    this.sdpPromise = new Promise(resolve => this.sdpPromiseResolve = resolve);\n  }\n\n  private async startOffer() { // WebRTC offer\n    try {\n      if (!this.localStream) { await this.initMedia(); }\n      if (!this.peer) { this.initPeer(); }\n      const offer = await this.peer.createOffer(this.OFFER_OPTIONS);\n      await this.peer.setLocalDescription(offer); // <-- after this, ICE candidate gathering starts\n      this.initICEGathering();\n      console.log('----------- startOffer - setLocalDescription');\n    } catch (err) { console.error('Video - startOffer() error', err); }\n  }\n\n  private async answerOffer(offerSDP) {  // WebRTC answer (handleOffer)\n    try {\n      if (!this.localStream) { await this.initMedia(); }\n      this.initPeer();\n      await this.peer.setRemoteDescription({ type: 'offer', sdp: offerSDP });\n      console.log('----------- answerOffer - setRemoteDescription');\n      const answer = await this.peer.createAnswer();\n      await this.peer.setLocalDescription(answer);\n      this.initICEGathering();\n      console.log('----------- answerOffer - setLocalDescription');\n    } catch (err) { console.error('Video - answerOffer() error', err); }\n  }\n\n\n  private async acknowledgeAnswer(answerSDP) { // WebRTC offer response (handleAnswer)\n    try {\n      if (!this.peer) { console.error('no peerconnection'); return; }\n      await this.peer.setRemoteDescription({ type: 'answer', sdp: answerSDP });\n      console.log('----------- answerOffer - setRemoteDescription');\n      this.sdpPromiseResolve();\n    } catch (err) { console.error('Video - acknowledgeAnswer() error', err); }\n  }\n\n  // The ice gathering process starts automatically after peer.setLocalDescription()\n  private initICEGathering() {\n    this.iceTimeOut = setTimeout(() => {\n      if (this.peer.iceGatheringState !== 'complete') {\n        console.log('ICE Gathering: After 10 seconds, the ICE Gathering process is still not completed', this.myICECandidates);\n        if (this.myICECandidates.length >= 4) {\n          console.log('ICE Gathering: Still, you have ', this.myICECandidates.length, ' candidates ready. Trying anyway');\n          this.ICEGatheringCompleted();\n        }\n      }\n    }, this.MAX_ICE_TIMEOUT);\n  }\n\n  private gatherICECandidate(ev) {\n    const newICE: any = {\n      type: 'candidate',\n      candidate: null,\n    };\n    if (ev.candidate) {\n      newICE.candidate = ev.candidate.candidate;\n      newICE.sdpMid = ev.candidate.sdpMid;\n      newICE.sdpMLineIndex = ev.candidate.sdpMLineIndex;\n    }\n    console.log(new Date(), 'PLAYER', this.playerNum, ' HAS DISCOVER A NEW CANDIDATE!!!!');\n    this.myICECandidates.push(newICE);\n\n    console.log('RTCPeerConnection.iceGatheringState = ', this.peer.iceGatheringState);\n    if (this.peer.iceGatheringState === 'complete') { this.ICEGatheringCompleted(); }\n  }\n\n  private ICEGatheringCompleted() {\n    console.log('ICE GATHERING COMPLETE!! sending SDP to the remote', !!this.iceTimeOut);\n    if (this.iceTimeOut) {\n      if (this.iceTimeOut) { clearInterval(this.iceTimeOut); this.iceTimeOut = null; }\n      if (this.videoStatus === 'A>>B') {\n        if (this.playerNum === 1) { this.gameDoc.update({ offerSDP: this.peer.localDescription.sdp }); }\n        if (this.playerNum === 2) { this.gameDoc.update({ answerSDP: this.peer.localDescription.sdp }); this.sdpPromiseResolve(); }\n      }\n      if (this.videoStatus === 'A<<B') {\n        if (this.playerNum === 2) { this.gameDoc.update({ offerSDP: this.peer.localDescription.sdp }); }\n        if (this.playerNum === 1) { this.gameDoc.update({ answerSDP: this.peer.localDescription.sdp }); this.sdpPromiseResolve(); }\n      }\n    }\n  }\n\n  private ICEConnectionChange(ev) { // iceConnectionState: new -> checking -> connected\n    console.log('RTCPeerConnection.iceConnectionState = ', this.peer.iceConnectionState);\n    if (this.peer.iceConnectionState === 'connected') {\n      this.sdpPromise.then(() => {\n        console.log('WebRTC Connected !');\n        this.updateStatus('A==B');\n        this.tabChange$.next('video');\n        if (this.iceTimeOut) { clearInterval(this.iceTimeOut); this.iceTimeOut = null; }\n      });\n    }\n  }\n\n  private clearTimeouts() {\n    if (this.connexionTimeout) { clearInterval(this.connexionTimeout); this.connexionTimeout = null; }\n    if (this.iceTimeOut) { clearInterval(this.iceTimeOut); this.iceTimeOut = null; }\n  }\n\n  private terminate() {\n    if (this.peer) {\n      this.peer.close();\n      this.peer = null;\n    }\n    if (this.localStream) {\n      this.localStream.getTracks().forEach(track => track.stop());\n      this.localStream = null;\n    }\n    if (this.remoteStream) {\n      this.remoteStream.getTracks().forEach(track => track.stop());\n      this.remoteStream = null;\n    }\n\n    this.sdpPromise = new Promise(resolve => this.sdpPromiseResolve = resolve);\n    this.clearTimeouts();\n  };\n\n\n}\n","import {Injectable} from \"@angular/core\";\nimport {AngularFirestore, AngularFirestoreCollection} from \"@angular/fire/firestore\";\nimport {IGameDoc} from \"@core/store/store.service\";\nimport {Observable} from \"rxjs\";\nimport {JbProfileService} from \"@core/common/jb-profile.service\";\nimport {AngularFireAuth} from \"@angular/fire/auth\";\n\n\n@Injectable({ providedIn: 'root', })\nexport class ChatService {\n  public gamesCol: AngularFirestoreCollection<IGameDoc>;\n  public games$: Observable<IGameDoc[]>;\n\n  constructor(\n    private profile: JbProfileService,\n    private afAuth: AngularFireAuth,\n    private afs: AngularFirestore,\n  ) {\n  }\n\n  sendMsg(game, text, owner) {\n    const gameDoc = this.afs.doc<IGameDoc>('games/' + game.id);\n    game.chat.push({\n      order: game.chat.length + 1,\n      timeMsg: new Date() + '',\n      text,\n      owner,\n    });\n    console.log('game.chat', game.chat);\n    return gameDoc.update({ chat: game.chat });\n  }\n\n}\n","import {NgModule} from '@angular/core';\nimport {GameComponent} from \"./game.component\";\nimport {RouterModule, Routes} from \"@angular/router\";\nimport {PieceSelectorModal} from \"./piece-selector-modal/piece-selector.modal\";\nimport {CoreModule} from \"@core/core.module\";\n\n\nconst routes: Routes = [\n  { path: '', component: GameComponent },\n  { path: ':gameId', data: { noLogin: true },\n    children: [{ path: ':tokenId', data: { noLogin: true }, component: GameComponent }]\n  }\n];\n\n@NgModule({\n  declarations: [GameComponent, PieceSelectorModal],\n  imports: [\n    CoreModule,\n    RouterModule.forChild(routes),\n  ]\n})\nexport class GameModule { }\n\n","import {Component, OnInit} from '@angular/core';\nimport {NgbActiveModal} from \"@ng-bootstrap/ng-bootstrap\";\n\n@Component({\n  selector: 'jb-piece-selector',\n  templateUrl: './piece-selector.modal.html',\n  styleUrls: ['./piece-selector.modal.scss']\n})\nexport class PieceSelectorModal implements OnInit {\n  public color: 'WHITE' | 'BLACK' = 'WHITE';\n\n  constructor(public activeModal: NgbActiveModal) {}\n\n  ngOnInit(): void {}\n\n  public selectPiece = (piece) => {\n    if (this.color === 'WHITE') {\n      switch (piece) {\n        case 'rook'   : this.activeModal.close(9); break;\n        case 'knight' : this.activeModal.close(10); break;\n        case 'bishop' : this.activeModal.close(11); break;\n        case 'queen'  : this.activeModal.close(12); break;\n      }\n    } else {\n      switch (piece) {\n        case 'rook'   : this.activeModal.close(25); break;\n        case 'knight' : this.activeModal.close(26); break;\n        case 'bishop' : this.activeModal.close(27); break;\n        case 'queen'  : this.activeModal.close(28); break;\n      }\n    }\n  }\n}\n","<jb-modal-header jbTitle=\"view.game.select_piece.header\" (jbClose)=\"activeModal.dismiss()\"></jb-modal-header>\n\n<div class=\"modal-body\">\n\n  <img *ngIf=\"color === 'WHITE'\" src=\"../../../../assets/w-knight.png\" (click)=\"selectPiece('knight')\">\n  <img *ngIf=\"color === 'WHITE'\" src=\"../../../../assets/w-bishop.png\" (click)=\"selectPiece('bishop')\">\n  <img *ngIf=\"color === 'WHITE'\" src=\"../../../../assets/w-rook.png\" (click)=\"selectPiece('rook')\">\n  <img *ngIf=\"color === 'WHITE'\" src=\"../../../../assets/w-queen.png\" (click)=\"selectPiece('queen')\">\n\n  <img *ngIf=\"color === 'BLACK'\" src=\"../../../../assets/b-knight.png\" (click)=\"selectPiece('knight')\">\n  <img *ngIf=\"color === 'BLACK'\" src=\"../../../../assets/b-bishop.png\" (click)=\"selectPiece('bishop')\">\n  <img *ngIf=\"color === 'BLACK'\" src=\"../../../../assets/b-rook.png\" (click)=\"selectPiece('rook')\">\n  <img *ngIf=\"color === 'BLACK'\" src=\"../../../../assets/b-queen.png\" (click)=\"selectPiece('queen')\">\n\n</div>\n\n<!--<div class=\"modal-footer\">-->\n<!--  <jb-btn jbType=\"cancel\" (jbClick)=\"activeModal.dismiss()\"></jb-btn>-->\n<!--</div>-->\n"]}