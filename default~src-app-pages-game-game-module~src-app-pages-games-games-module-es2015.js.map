{"version":3,"sources":["./src/app/core/store/store.service.ts","./src/app/core/core-lib/helpers.ts"],"names":[],"mappings":"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,CAAC,CAAC,IAAI,EAAE;cACrE,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,KAAK,CAAE,CAAC,EAAE,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,IAAI,EAAE;cACrE,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,IAAI,EAAE;cACrE,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,IAAI,EAAE;cACrE,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,IAAI,EAAE;cACrE,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,IAAI,EAAE;cACrE,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,IAAI,EAAE;cACrE,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,IAAI,EAAE,CACzE,CAAC;QAEF,OAAO,IAAI,CAAC;IACd,CAAC;IAED,qEAAqE;IAC9D,UAAU,CAAC,IAAI;QACpB,MAAM,OAAO,GAAG,IAAI,CAAC,GAAG,CAAC,GAAG,CAAW,QAAQ,GAAG,IAAI,CAAC,EAAE,CAAC,CAAC;QAC3D,OAAO,OAAO,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;IAC9B,CAAC;IAUD,0CAA0C;IACnC,WAAW,CAAC,IAAI;QACrB,OAAO,IAAI,CAAC,MAAM,KAAK,WAAW,CAAC,SAAS;eACvC,IAAI,CAAC,OAAO,KAAK,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,EAAE;eACrC,IAAI,CAAC,OAAO,KAAK,IAAI;IAC5B,CAAC;;wEAnKU,YAAY;+FAAZ,YAAY,WAAZ,YAAY,mBADC,MAAM;6FACnB,YAAY;cADxB,wDAAU;eAAC,EAAE,UAAU,EAAE,MAAM,GAAG;;;;;;;;;;;;;;ACtHnC;AAAA;AAAA;AAAO,MAAM,SAAS,GAAG,CAAC,OAAO,EAAE,EAAE;IACnC,IAAI,GAAG,GAAG,EAAE,CAAC;IACb,GAAG,IAAI,CAAC,OAAO,CAAC,OAAO,EAAE,GAAG,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;IACvC,GAAG,IAAI,GAAG,GAAG,CAAC,CAAC,OAAO,CAAC,QAAQ,EAAE,GAAG,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;IACpD,GAAG,IAAI,GAAG,GAAG,CAAC,OAAO,CAAC,WAAW,EAAE,GAAG,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;IACjD,GAAG,IAAI,GAAG,GAAG,CAAC,OAAO,CAAC,QAAQ,EAAE,GAAG,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;IAC9C,GAAG,IAAI,GAAG,GAAG,CAAC,OAAO,CAAC,UAAU,EAAE,GAAG,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;IAChD,GAAG,IAAI,GAAG,GAAG,CAAC,OAAO,CAAC,UAAU,EAAE,GAAG,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;IAChD,OAAO,GAAG,CAAC;AACb,CAAC;AACM,MAAM,SAAS,GAAG,CAAC,OAAO,EAAE,EAAE;IACnC,MAAM,GAAG,GAAG,OAAO,CAAC,KAAK,CAAC,CAAC,EAAC,CAAC,CAAC,CAAC;IAC/B,MAAM,KAAK,GAAG,OAAO,CAAC,KAAK,CAAC,CAAC,EAAC,CAAC,CAAC,CAAC;IACjC,MAAM,IAAI,GAAG,OAAO,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;IAC9B,OAAO,IAAI,IAAI,CAAC,GAAG,KAAK,IAAI,GAAG,IAAI,IAAI,EAAE,CAAC,CAAC;AAC7C,CAAC","file":"default~src-app-pages-game-game-module~src-app-pages-games-games-module-es2015.js","sourcesContent":["import {Injectable} from '@angular/core';\nimport {AngularFireAuth} from '@angular/fire/auth';\nimport {map, take} from 'rxjs/operators';\nimport {AngularFirestore, AngularFirestoreCollection} from '@angular/fire/firestore';\nimport {Observable} from 'rxjs';\nimport {JbProfileService} from '@core/common/jb-profile.service';\nimport {dCopy} from 'jb-ui-lib';\nimport {dateToStr} from '@core/core-lib/helpers';\n\nexport enum EGameStatus {\n  REQUESTED = 'REQUESTED',\n  WHITE = 'WHITE',\n  BLACK = 'BLACK',\n  DRAW = 'DRAW',\n  WHITE_WON_BY_MATE = 'WHITE WON BY MATE',\n  BLACK_WON_BY_MATE = 'BLACK WON BY MATE',\n  WHITE_WON_BY_TIMEOUT = 'WHITE WON BY TIMEOUT',\n  BLACK_WON_BY_TIMEOUT = 'BLACK WON BY TIMEOUT',\n  WHITE_WON_BY_RESIGN = 'WHITE WON BY RESIGN',\n  BLACK_WON_BY_RESIGN = 'BLACK WON BY RESIGN',\n}\n\nexport interface IChatMsg {\n  order: number;\n  timeMsg: string;\n  text: string;\n  owner: string;\n}\n\nexport interface IVideoConf {\n  cam1On: boolean;    mic1On: boolean;  // Whether player 1 video/audio stream is on\n  cam2On: boolean;    mic2On: boolean;  // Whether player 2 video/audio stream is on\n}\n\n\n\nexport interface IGameDoc {\n  player1: string,\n  player2: string,\n  playerName1: string,\n  playerName2: string,\n  status: EGameStatus;\n  requestDate ?: string;\n  startTime   ?: string;\n  nextMoveMinutes: number;\n  history: Array<IMove>;\n  board: Array<EPiece | 0>;\n  token1: string;\n  token2: string;\n  chat: Array<IChatMsg>;\n\n  videoStatus: string;  /*  ''     No call\n                            'A-> ' A calling B              ' <-B' B calling A\n                            'A->B' A calling B (Ringing)    'A<-B' B calling A (Ringing)\n                            'A>>B' WebRTC connecting        'A<<B' WebRTC connecting\n                            'A==B' Connected   */\n  offerSDP: string;   // The WebRTC offer SDP (caller)\n  answerSDP: string;  // The WebRTC answer SDP (callee)\n  lastPing1: string;\n  lastPing2: string;\n  videoConfig: IVideoConf;\n}\n\nexport enum EPiece {\n  BRook1 = 25, BKnight1 = 26, BBishop1 = 27, BQueen = 28, BKing  = 29, BBishop2 = 30, BKnight2 = 31, BRook2 = 32,\n  BPawn1 = 17, BPawn2   = 18, BPawn3   = 19, BPawn4 = 20, BPawn5 = 21, BPawn6   = 22, BPawn7   = 23, BPawn8 = 24,\n  WPawn1 = 1,  WPawn2   = 2,  WPawn3   = 3,  WPawn4 = 4,  WPawn5 = 5,  WPawn6   = 6,  WPawn7   = 7,  WPawn8 = 8,\n  WRook1 = 9,  WKnight1 = 10, WBishop1 = 11, WQueen = 12, WKing  = 13, WBishop2 = 14, WKnight2 = 15, WRook2 = 16,\n}\ninterface IPiece {\n  code: EPiece;\n  name: 'pawn' | 'rook' | 'knight' | 'bishop' | 'queen' | 'king';\n  color: 'BLACK' | 'WHITE';\n  img: string;\n}\n\nconst W_KING = 13;\nconst B_KING = 29;\n\nexport interface IMove {\n  posOri      : number;             // original position of the moving piece\n  posDes      : number;             // destination position of the moving piece\n  piece       : IPiece;             // object with the moving piece ({ code, color, name, img })\n  note       ?: string;             // official notation text for the move\n  nextBoard   : Array<EPiece | 0>;  // The game.board[] array after the move\n  takes      ?: EPiece;             // the piece that is being taken (if any. if none, 0)\n  promotedTo ?: EPiece;             // if the move is promoting a pawn, the code of the new piece\n  timeStamp   : string;             // time the move's been made (js time)\n}\n\n\nconst emptyBoard = [\n 25, 26, 27, 28, 29, 30, 31, 32,  // 0-7    0\n 17, 18, 19, 20, 21, 22, 23, 24,  // 8-15   1\n  0,  0,  0,  0,  0,  0,  0,  0,  // 16-23  2\n  0,  0,  0,  0,  0,  0,  0,  0,  // 24-31  3\n  0,  0,  0,  0,  0,  0,  0,  0,  // 32-39  4\n  0,  0,  0,  0,  0,  0,  0,  0,  // 40-47  5\n  1,  2,  3,  4,  5,  6,  7,  8,  // 48-55  6\n  9, 10, 11, 12, 13, 14, 15, 16,  // 56-63  7\n];\n\n//   R   Kn  B   Q   K   B   Kn  R            R   Kn  B   Q   K   B   Kn  R\n//   ----------------------------------------------------------------------\n//   25, 26, 27, 28, 29, 30, 31, 32,  | 0 |  00  01  02  03  04  05  06  07\n//   17, 18, 19, 20, 21, 22, 23, 24,  | 1 |  08  09  10  11  12  13  14  15\n//   0,  0,  0,  0,  0,  0,  0,  0,   | 2 |  16  17  18  19  20  21  22  23\n//   0,  0,  0,  0,  0,  0,  0,  0,   | 3 |  24  25  26  27  28  29  30  31\n//   0,  0,  0,  0,  0,  0,  0,  0,   | 4 |  32  33  34  35  36  37  38  39\n//   0,  0,  0,  0,  0,  0,  0,  0,   | 5 |  40  41  42  43  44  45  46  47\n//   1,  2,  3,  4,  5,  6,  7,  8,   | 6 |  48  49  50  51  52  53  54  55\n//   9, 10, 11, 12, 13, 14, 15, 16,   | 7 |  56  57  58  59  60  61  62  63\n//   ----------------------------------------------------------------------\n//   R  Kn   B   Q   K   B  Kn   R            R  Kn   B   Q   K   B  Kn   R\n\n\n\n\n@Injectable({ providedIn: 'root', })\nexport class StoreService {\n  public gamesCol: AngularFirestoreCollection<IGameDoc>;\n  public games$: Observable<IGameDoc[]>;\n\n  constructor(\n    private profile: JbProfileService,\n    private afAuth: AngularFireAuth,\n    private afs: AngularFirestore,\n  ) {\n    this.gamesCol = this.afs.collection<IGameDoc>('games');\n    this.games$ = this.gamesCol.snapshotChanges().pipe(\n      map(actions => actions.map(a => {\n        const data = a.payload.doc.data() as IGameDoc;\n        const id = a.payload.doc.id;\n        return { id, ...data };\n      }))\n    );\n\n\n  }\n\n  public getGames = (): any => this.games$.pipe(take(1)).toPromise();\n  public getGame$ = gameId => this.afs.doc<IGameDoc>('/games/' + gameId).valueChanges();\n  public getGame  = gameId => this.getGame$(gameId).pipe(take(1)).toPromise();\n\n\n  public newGame(nextMoveMinutes = 1000) { // TODO: Move this to a cloud function (games should be read only)\n    // return this.getGames().then(games => { // Find a requested game to join as player 2\n    //   const game = games.find(g => this.canJoinGame(g));\n    //   if (game) { return this.joinGame(game); }\n    //   return this.requestGame(); // If none, create a new game\n    // });\n    const newGame = {\n      requestDate : dateToStr(new Date()),\n      startTime   : null,\n      player1     : this.profile.user.id,\n      player2     : null,\n      playerName1 : this.profile.user.displayName,\n      playerName2 : 'Guest',\n      token1      : this.afs.createId(),\n      token2      : this.afs.createId(),\n      status      : EGameStatus.REQUESTED,\n      history     : [],\n      board       : [...emptyBoard],\n      lastPing1   : null,\n      lastPing2   : null,\n      chat        : [],\n      videoStatus : '',\n      offerSDP    : null,\n      answerSDP   : null,\n      videoConfig : { cam1On: true, mic1On: true, cam2On: true, mic2On: true },\n      nextMoveMinutes,\n    }\n    console.log('newGame', newGame);\n    return this.gamesCol.add(newGame).then(game => {\n      return { ...newGame, id: game.id };\n    });\n  }\n\n  public joinGame(game) {\n      const gameDoc = this.afs.doc<IGameDoc>('games/' + game.id);\n      return gameDoc.update({ ...game,\n        startTime   : (new Date()).toString(),\n        player2     : this.profile.user.id,\n        playerName2 : this.profile.user.displayName,\n        status      : EGameStatus.WHITE,\n        history     : [],\n        board       : [...emptyBoard],\n      });\n  }\n\n  public updateGamePlayer(game) {\n      const gameDoc = this.afs.doc<IGameDoc>('games/' + game.id);\n      return gameDoc.update({\n        player2     : this.profile.user.id,\n        playerName2 : this.profile.user.displayName,\n      });\n  }\n\n  public endGame(game, loserId?: string) {\n    let status = EGameStatus.DRAW;\n    if (game.player1 === loserId) { status = EGameStatus.BLACK_WON_BY_RESIGN; }\n    if (game.player2 === loserId) { status = EGameStatus.WHITE_WON_BY_RESIGN; }\n    const gameDoc = this.afs.doc<IGameDoc>('games/' + game.id);\n    return gameDoc.update({ ...game, status });\n  }\n\n  public deleteGame(gameId) {\n    return this.afs.doc<IGameDoc>('games/' + gameId).delete();\n  }\n\n  // public joinGame(game) {\n  //   const gameDoc = this.afs.doc<IGameDoc>('games/' + game.id);\n  //   const joinGame = {\n  //     requestDate : game.requestDate,\n  //     startTime   : (new Date()).toString(),\n  //     player1     : game.player1,\n  //     player2     : this.profile.user.id,\n  //     playerName1 : game.playerName1,\n  //     playerName2 : this.profile.user.displayName,\n  //     status      : EGameStatus.WHITE,\n  //     history     : [],\n  //     board       : [...emptyBoard],\n  //   };\n  //   return gameDoc.update(joinGame);\n  // }\n\n  public commitMove(game, posOri, posDes, promotedPieceCode?) {\n    this.makeMove(game, posOri, posDes, promotedPieceCode);\n    return this.updateGame(game);\n  }\n\n  public makeMove(game, posOri, posDes, promotedPieceCode?) {\n    const validMoves = this.getValidMoves(game, posOri);\n    const move = validMoves.find(move => move.posOri === posOri && move.posDes === posDes);\n    if (!move) { return null; }\n    move.note = this.getMoveNote(game, posOri, posDes, promotedPieceCode);\n    move.timeStamp = (new Date()).toString();\n\n    if (promotedPieceCode) {\n      move.promotedTo = promotedPieceCode;\n      move.nextBoard[posDes] = promotedPieceCode;\n    }\n\n    game.history.push(move);\n    game.board = [...move.nextBoard];\n    game.status = game.status === EGameStatus.WHITE ? EGameStatus.BLACK : EGameStatus.WHITE;\n    if (this.isCheckMate(game)) {\n      game.status = move.piece.color === 'WHITE' ? EGameStatus.WHITE_WON_BY_MATE : EGameStatus.BLACK_WON_BY_MATE;\n    }\n\n    console.log(game.board.slice( 0,  8).map(v => ('' + v).pad(5, ' ')).join()\n       + '\\n' + game.board.slice( 8, 16).map(v => ('' + v).pad(5, ' ')).join()\n       + '\\n' + game.board.slice(16, 24).map(v => ('' + v).pad(5, ' ')).join()\n       + '\\n' + game.board.slice(24, 32).map(v => ('' + v).pad(5, ' ')).join()\n       + '\\n' + game.board.slice(32, 40).map(v => ('' + v).pad(5, ' ')).join()\n       + '\\n' + game.board.slice(40, 48).map(v => ('' + v).pad(5, ' ')).join()\n       + '\\n' + game.board.slice(48, 56).map(v => ('' + v).pad(5, ' ')).join()\n       + '\\n' + game.board.slice(56, 64).map(v => ('' + v).pad(5, ' ')).join()\n    );\n\n    return move;\n  }\n\n  // TODO: This should trigger a cloud function that validates the move\n  public updateGame(game) {\n    const gameDoc = this.afs.doc<IGameDoc>('games/' + game.id);\n    return gameDoc.update(game);\n  }\n\n  public resetGame = (game) => {\n    game.history = [];\n    game.status = EGameStatus.WHITE;\n    game.board = [...emptyBoard];\n    game.startTime = (new Date()).toString();\n  }\n\n\n  // --------------- Helpers ---------------\n  public canJoinGame(game) {\n    return game.status === EGameStatus.REQUESTED\n      && game.player1 !== this.profile.user.id\n      && game.player2 === null\n  }\n\n  public canPlayGame = game => game.status === EGameStatus.WHITE || game.status === EGameStatus.BLACK;\n\n  public squareRow = num => Math.floor(num / 8);\n  public square2D = num => [num % 8, this.squareRow(num)];  // row = [0, ... 7]\n  public squareColor = num => (num + (this.squareRow(num) % 2)) % 2 === 0 ? 'white' : 'black';\n\n\n  public getPiece = (code): IPiece => {\n    const pType = { code, name: '', color: '', img: '' };\n    if ([1, 2, 3, 4, 5, 6, 7, 8].includes(code))            { pType.name = 'pawn';    pType.color = 'WHITE'; }\n    if ([EPiece.WRook1,   EPiece.WRook2].includes(code))    { pType.name = 'rook';    pType.color = 'WHITE'; }\n    if ([EPiece.WKnight1, EPiece.WKnight2].includes(code))  { pType.name = 'knight';  pType.color = 'WHITE'; }\n    if ([EPiece.WBishop1, EPiece.WBishop2].includes(code))  { pType.name = 'bishop';  pType.color = 'WHITE'; }\n    if (code === EPiece.WQueen)                             { pType.name = 'queen';   pType.color = 'WHITE'; }\n    if (code === EPiece.WKing)                              { pType.name = 'king';    pType.color = 'WHITE'; }\n    if ([17, 18, 19, 20, 21, 22, 23, 24].includes(code))    { pType.name = 'pawn';    pType.color = 'BLACK'; }\n    if ([EPiece.BRook1,   EPiece.BRook2].includes(code))    { pType.name = 'rook';    pType.color = 'BLACK'; }\n    if ([EPiece.BKnight1, EPiece.BKnight2].includes(code))  { pType.name = 'knight';  pType.color = 'BLACK'; }\n    if ([EPiece.BBishop1, EPiece.BBishop2].includes(code))  { pType.name = 'bishop';  pType.color = 'BLACK'; }\n    if (code === EPiece.BQueen)                             { pType.name = 'queen';   pType.color = 'BLACK'; }\n    if (code === EPiece.BKing)                              { pType.name = 'king';    pType.color = 'BLACK'; }\n\n    if (pType.name) { pType.img = `assets/${pType.color[0].toLowerCase()}-${pType.name}.png`; }\n    return pType as IPiece;\n  }\n\n\n  // It returns all valid moves every piece can make in the current turn\n  public getAllValidMoves = (game) => {\n    if (game.status !== EGameStatus.WHITE && game.status !== EGameStatus.BLACK) { return []; }\n    let moves = [];\n    this.playerPieces(game.status, game.board).forEach(piece => {\n      moves = [ ...moves, ...this.getValidMoves(game, piece.pos) ];\n    });\n    return moves;\n  };\n\n  // Returns an array with the (color) players pieces and their positions\n  public playerPieces = (color, board): Array<IPiece & { pos: number }> => {\n    return board.map((code, pos) => ({ ...this.getPiece(code), pos })).filter(p => p.color === color);\n  }\n\n  // It returns an array with all possible moves a single piece can make at the current state\n  // Every move contains: {\n  //    posOri --> original position of the moving piece\n  //    posDes --> destination position of the moving piece\n  //    piece ---> object with the moving piece ({ code, color, name })\n  //    takes ---> the piece that is being taken (if any. if none, 0)\n  //    note ----> official notation text for the move\n  //    nextBoard --> The game.board[] array after the move\n  // }\n  public getValidMoves = (game, posOri, fullCheck = true) => {\n    const board = game.board;\n    const piece = this.getPiece(board[posOri]);\n    const [col, row] = this.square2D(posOri);\n    const validMoves: Array<IMove> = [];\n    const yourColor = piece.color;\n    const otherColor = piece.color === 'WHITE' ? 'BLACK' : 'WHITE';\n\n    // Returns an object with the piece at that position + helpers\n    const pieceAt = (col, row) => {\n      const isIn = row >= 0 && row <= 7 && col >= 0 && col <= 7;\n      const pos = (row * 8) + col;\n      const code = board[pos];\n      const piece = this.getPiece(code);\n      return { pos, code, piece,\n        isEmpty: () => isIn && code === 0,\n        isYours: () => isIn && piece?.color === yourColor,\n        isOther: () => isIn && piece?.color === otherColor,\n        is: (values) => {\n          if (!isIn) { return false; }\n          if (values.includes('empty') && code === 0) { return true; }\n          if (values.includes(piece.color)) { return true; }\n          return false;\n        }\n      };\n    };\n\n    // Adds a move to the validMoves[] array\n    const addMove = (col, row) => {\n      if (row >= 0 && row <= 7 && col >= 0 && col <= 7) {\n        const posDes = (row * 8) + col;\n        const nextMove: any = { posOri, posDes, takes: game.board[posDes], nextBoard: dCopy(game.board) };\n        nextMove.nextBoard[posDes] = nextMove.nextBoard[posOri];\n        nextMove.nextBoard[posOri] = 0;\n        nextMove.piece = piece.keyFilter('code,color,name');\n        nextMove.note = '';  // will be calculated later\n        validMoves.push(nextMove);\n        return nextMove;\n      }\n    };\n\n    // If the given position is valid (has any of the values[]) add the move. Return the piece at that position\n    const addMoveIf = (col, row, values) => {\n      const piece = pieceAt(col, row);\n      if (piece.is(values)) { addMove(col, row); }\n      return piece;\n    };\n\n    if (piece.name === 'knight' && piece.color === yourColor) {\n      addMoveIf(col - 1, row - 2, ['empty', otherColor]);\n      addMoveIf(col + 1, row - 2, ['empty', otherColor]);\n      addMoveIf(col - 2, row - 1, ['empty', otherColor]);\n      addMoveIf(col + 2, row - 1, ['empty', otherColor]);\n      addMoveIf(col - 2, row + 1, ['empty', otherColor]);\n      addMoveIf(col - 1, row + 2, ['empty', otherColor]);\n      addMoveIf(col + 2, row + 1, ['empty', otherColor]);\n      addMoveIf(col + 1, row + 2, ['empty', otherColor]);\n    }\n    if ((piece.name === 'queen' || piece.name === 'rook') && piece.color === yourColor) {\n      for (let t = 1; t <= 8; t++) { if (!addMoveIf(col, row - t, ['empty', otherColor]).isEmpty()) { break; } }\n      for (let t = 1; t <= 8; t++) { if (!addMoveIf(col, row + t, ['empty', otherColor]).isEmpty()) { break; } }\n      for (let t = 1; t <= 8; t++) { if (!addMoveIf(col - t, row, ['empty', otherColor]).isEmpty()) { break; } }\n      for (let t = 1; t <= 8; t++) { if (!addMoveIf(col + t, row, ['empty', otherColor]).isEmpty()) { break; } }\n    }\n    if ((piece.name === 'queen' || piece.name === 'bishop') && piece.color === yourColor) {\n      for (let t = 1; t <= 8; t++) { if (!addMoveIf(col - t, row - t, ['empty', otherColor]).isEmpty()) { break; } }\n      for (let t = 1; t <= 8; t++) { if (!addMoveIf(col - t, row + t, ['empty', otherColor]).isEmpty()) { break; } }\n      for (let t = 1; t <= 8; t++) { if (!addMoveIf(col + t, row - t, ['empty', otherColor]).isEmpty()) { break; } }\n      for (let t = 1; t <= 8; t++) { if (!addMoveIf(col + t, row + t, ['empty', otherColor]).isEmpty()) { break; } }\n    }\n    if (piece.name === 'king' && piece.color === yourColor) {\n      addMoveIf(col - 1, row - 1, ['empty', otherColor]);\n      addMoveIf(col,     row - 1, ['empty', otherColor]);\n      addMoveIf(col + 1, row - 1, ['empty', otherColor]);\n      addMoveIf(col - 1, row,     ['empty', otherColor]);\n      addMoveIf(col + 1, row,     ['empty', otherColor]);\n      addMoveIf(col - 1, row + 1, ['empty', otherColor]);\n      addMoveIf(col,     row + 1, ['empty', otherColor]);\n      addMoveIf(col + 1, row + 1, ['empty', otherColor]);\n    }\n\n    // En Passant (Pawn takes pawn next to it moving in diagonal, after opponent's pawn moved 2 positions opening)\n    // - The capturing pawn must have advanced exactly three ranks to perform this move.\n    // - The captured pawn must have moved two squares in one move, landing right next to the capturing pawn.\n    // - The en passant capture must be performed on the turn immediately after the pawn being captured moves.\n    const checkEnPassant = (color) => {\n      if (!game.history.length) { return; }\n      const lastMove = game.history.getLast();\n      const [lastDesCol, lastDesRow] = this.square2D(lastMove.posDes);\n      const lastPiece = pieceAt(lastDesCol, lastDesRow);\n      const row1  = color === 'WHITE' ? -1 : 1;\n      const row16 = row1 * 16;\n      if (lastPiece.piece.name === 'pawn' && lastMove.posOri === lastMove.posDes + row16 && row === lastDesRow) {\n        if (lastDesCol === col - 1) {\n          const move = addMove(col - 1, row + row1);\n          move.takes =  move.nextBoard[lastMove.posDes];\n          move.nextBoard[lastMove.posDes] = 0;\n        }\n        if (lastDesCol === col + 1) {\n          const move = addMove(col + 1, row + row1);\n          move.takes = move.nextBoard[lastMove.posDes];\n          move.nextBoard[lastMove.posDes] = 0;\n        }\n      }\n    }\n\n    if (piece.name === 'pawn' && piece.color === 'WHITE') {\n      if (row === 6 && pieceAt(col, row - 1).isEmpty() && pieceAt(col, row - 2).isEmpty()) { addMove(col, row - 2); }  // Advance 2\n      addMoveIf(col, row - 1, ['empty']); // Advance 1\n      addMoveIf(col - 1, row - 1, [otherColor]); // Kill left\n      addMoveIf(col + 1, row - 1, [otherColor]); // Kill right\n      checkEnPassant(piece.color);\n    }\n    if (piece.name === 'pawn' && piece.color === 'BLACK') {\n      if (row === 1 && pieceAt(col, row + 1).isEmpty() && pieceAt(col, row + 2).isEmpty()) { addMove(col, row + 2); }  // Advance 2\n      addMoveIf(col, row + 1, ['empty']); // Advance 1\n      addMoveIf(col - 1, row + 1, [otherColor]); // Kill left\n      addMoveIf(col + 1, row + 1, [otherColor]); // Kill right\n      checkEnPassant(piece.color);\n    }\n\n\n    // Checks if the given position is being attacked by an opponent's piece. If so, it returns the attacker piece\n    const isPosAttacked = (pos) => {\n      if (!fullCheck) { return false; } // avoid recursivity\n      for (const otherPiece of this.playerPieces(otherColor, board)) {\n        const attackMoves = this.getValidMoves(game, otherPiece.pos, false).filter(move => move.posDes === pos);\n        if (attackMoves.length > 0) { return otherPiece; }\n      }\n    }\n\n    // Castling\n    // - The king and the rook may not have moved from their starting squares if you want to castle.\n    // - All spaces between the king and the rook must be empty.\n    // - The king cannot be in check.\n    // - The squares that the king passes over must not be under attack, nor the square where it lands on.\n    if (piece.code === W_KING && piece.color === yourColor && game.history.every(m => m.piece.code !== W_KING)) { // white king\n      if (game.history.every(m => m.piece !== 16)) {  // King <-> Right Rook\n        if (pieceAt(5, 7).isEmpty() && pieceAt(6, 7).isEmpty()) {\n          if (!isPosAttacked(60) && !isPosAttacked(61) && !isPosAttacked(62)) {\n            const move = addMove(6, 7);\n            move.nextBoard[63] = 0; move.nextBoard[61] = 16;\n          }\n        }\n      }\n      if (game.history.every(m => m.piece.code !== 9)) { // Left Rook <-> King\n        if (pieceAt(1, 7).isEmpty() && pieceAt(2, 7).isEmpty() && pieceAt(3, 7).isEmpty()) {\n          if (!isPosAttacked(60) && !isPosAttacked(59) && !isPosAttacked(58)) {\n            const move = addMove(2, 7);\n            move.nextBoard[56] = 0; move.nextBoard[59] = 9;\n          }\n        }\n      }\n    }\n    if (piece.code === B_KING && piece.color === yourColor && game.history.every(m => m.piece.code !== B_KING)) { // black king\n      if (game.history.every(m => m.piece.code !== 32)) {  // Right Rook\n        if (pieceAt(5, 0).isEmpty() && pieceAt(6, 0).isEmpty()) {\n          if (!isPosAttacked(4) && !isPosAttacked(5) && !isPosAttacked(6)) {\n            const move = addMove(6, 0);\n            move.nextBoard[7] = 0; move.nextBoard[5] = 32;\n          }\n        }\n      }\n      if (game.history.every(m => m.piece.code !== 25)) { // Left Rook\n        if (pieceAt(1, 0).isEmpty() && pieceAt(2, 0).isEmpty() && pieceAt(3, 0).isEmpty()) {\n          if (!isPosAttacked(4) && !isPosAttacked(3) && !isPosAttacked(2)) {\n            const move = addMove(2, 0);\n            move.nextBoard[0] = 0; move.nextBoard[3] = 25;\n          }\n        }\n      }\n    }\n\n\n\n    if (!fullCheck) { return validMoves; } // exclude moves that would cause mate (to avoid recursivity)\n\n    // Invalidate mate moves:\n    // If a move puts the king in a position that can be taken at the next move, remove it because it is not valid\n    return validMoves.filter(move => {\n      const nextGame = dCopy(game);\n      nextGame.board = move.nextBoard;\n      nextGame.history.push(move);\n      // Filter opponent's pieces and calculate all opponent's valid moves after move.\n      // If any of these calculated valid moves takes the king, invalidate the current move.\n      return !this.playerPieces(otherColor, board).some(piece => {\n        const killMoves = this.getValidMoves(nextGame, piece.pos, false).filter(nextMove => {\n          return yourColor === 'WHITE' && nextMove.takes === W_KING\n              || yourColor === 'BLACK' && nextMove.takes === B_KING;\n        });\n        // if (killMoves.length > 0) { console.log('Killing moves', piece, killMoves); }\n        return killMoves.length > 0;\n      });\n    });\n\n  }\n\n\n  // Check if the move is a Pawn reaching the other side of the board\n  public isPawnFinished = (posOri, posDes, piece) => {\n    if (piece.name === 'pawn') {\n      if (piece.color === 'WHITE' && [0,1,2,3,4,5,6,7].includes(posDes)) { return true; }\n      if (piece.color === 'BLACK' && [56,57,58,59,60,61,62,63].includes(posDes)) { return true; }\n    }\n    return false;\n  }\n\n\n  // Check if the current game is in check.\n  // If the last color plays again, and there is a valid move that kills the king, it's check.\n  public isCheck = (game) => {\n    const lastMoveColor = game.history.getLast()?.piece?.color;\n    for (const piece of this.playerPieces(lastMoveColor, game.board)) {\n      for (const move of this.getValidMoves(game, piece.pos, false)) {\n        if (lastMoveColor === 'WHITE' && move.takes === B_KING) { return true; }\n        if (lastMoveColor === 'BLACK' && move.takes === W_KING) { return true; }\n      }\n    }\n    return false;\n  }\n\n  // Check if the current game is in check mate. Calculate all next valid moves. If none, it's mate\n  public isCheckMate = (game) => {\n    const nextMoveColor = game.history.getLast()?.piece?.color === 'WHITE' ? 'BLACK' : 'WHITE'\n    const pieces = this.playerPieces(nextMoveColor, game.board);\n    for (const piece of pieces) { // If there is a valid move, it's not mate\n      if (this.getValidMoves(game, piece.pos).length) { return false; }\n    }\n    return true;\n  }\n\n\n\n  public getMoveNote = (game, posOri, posDes, promotedPieceCode?) => {\n\n    // Return the move notation string https://en.wikipedia.org/wiki/Algebraic_notation_(chess)#Notation_for_moves\n    const getNonUniqueNote = (move: IMove, oriFile = false, oriRank = false) => {\n      let mLetter = false;    // format[0]\n      // let oriFile = false; // format[1]\n      // let oriRank = false; // format[2]\n      let xTaking = false;    // format[3]\n      let desFile = true;     // format[4]\n      let desRank = true;     // format[5]\n      let promote = false;    // format[6]\n\n      let note = '';\n      if (move.piece.name !== 'pawn') { mLetter = true; }               // Piece letter (except pawn)\n      if (move.piece.name === 'pawn' && move.takes) { oriFile = true; } // When pawn takes, add origin file\n      if (move.takes) { xTaking = true; } // When taking, add the 'x' between origin / dest\n      if (promotedPieceCode) { promote = true; } // If a pawn is being promoted\n\n      // Each position indicates whether to leave it empty (false) or to add the value (true)\n      note = (!mLetter ? '' : move.piece.name[0].toUpperCase())         // 0 - Letter of the moving piece\n           + (!oriFile ? '' : 'abcdefgh'[move.posOri % 8])              // 1 - Original file of the moving piece (oriFile)\n           + (!oriRank ? '' : (8 - Math.floor(move.posOri / 8)) + '')   // 2 - Original rank of the moving piece (oriRank)\n           + (!xTaking ? '' : 'x')                                      // 3 - Whether it takes another piece (x)\n           + (!desFile ? '' : 'abcdefgh'[move.posDes % 8])              // 4 - Destination file of the moving piece (desFile)\n           + (!desRank ? '' : (8 - Math.floor(move.posDes / 8)) + '')   // 5 - Destination rank of the moving piece (desRank)\n           + (!promote ? '' : ('=' + this.getPiece(promotedPieceCode).name[0].toUpperCase())); // 6 - Letter of the promoted piece\n\n      return note;\n    };\n\n\n    // Disambiguating moves\n    // When two (or more) identical pieces can move to the same square, the moving piece is uniquely identified\n    // by specifying the piece's letter, followed by (in descending order of preference):\n    //  1. the file of departure (if they differ); or\n    //  2. the rank of departure (if the files are the same but the ranks differ); or\n    //  3. both the file and rank of departure (if neither alone is sufficient to identify the piece\n    const allMoves = this.getAllValidMoves(game).map(move => {\n      return [\n        { ...move, note: getNonUniqueNote(move, false, false) },  // no file nor rank\n        { ...move, note: getNonUniqueNote(move, true,  false) },  // add file\n        { ...move, note: getNonUniqueNote(move, false, true)  },  // add rank\n        { ...move, note: getNonUniqueNote(move, true,  true)  },  // add file + rank\n      ];\n    });\n    const moves = allMoves.map(move => {\n      if (allMoves.filter(m => m[0].note === move[0].note).length < 2) { return move[0]; }\n      if (allMoves.filter(m => m[1].note === move[1].note).length < 2) { return move[1]; }\n      if (allMoves.filter(m => m[2].note === move[2].note).length < 2) { return move[2]; }\n      if (allMoves.filter(m => m[3].note === move[3].note).length < 2) { return move[3]; }\n      console.error('Ambiguity with the move notation!');\n      return move[0];\n    });\n\n    const move = moves.find(move => move.posOri === posOri && move.posDes === posDes);\n\n    // Castling move\n    if (move.piece.code === W_KING && move.posOri === 60 && move.posDes === 62) { move.note = 'O-O'; }   // Kingside castling\n    if (move.piece.code === W_KING && move.posOri === 60 && move.posDes === 58) { move.note = 'O-O-O'; } // Queenside castling\n    if (move.piece.code === B_KING && move.posOri === 4 && move.posDes === 2) { move.note = 'O-O-O'; }   // Kingside castling\n    if (move.piece.code === B_KING && move.posOri === 4 && move.posDes === 6) { move.note = 'O-O'; }     // Queenside castling\n\n    // Check if the status after the move is a check mate\n    const nextGame = dCopy({ ...game, board: move.nextBoard, history: [ ...game.history, move ] });\n\n    if (this.isCheckMate(nextGame))  { move.note += '#'; } // Add a check mate mark '#'\n    else if (this.isCheck(nextGame)) { move.note += '+'; } // Add a check mark '+'\n\n    return move?.note;\n  };\n\n}\n","export const dateToStr = (dateVal) => {\n  let res = '';\n  res += (dateVal.getDate() + '').pad(2);\n  res += '-' + ((dateVal.getMonth() + 1) + '').pad(2);\n  res += '-' + (dateVal.getFullYear() + '').pad(4);\n  res += ' ' + (dateVal.getHours() + '').pad(2);\n  res += ':' + (dateVal.getMinutes() + '').pad(2);\n  res += ':' + (dateVal.getSeconds() + '').pad(2);\n  return res;\n}\nexport const strToDate = (dateVal) => {\n  const day = dateVal.slice(0,2);\n  const month = dateVal.slice(3,5);\n  const rest = dateVal.slice(6);\n  return new Date(`${month}-${day}-${rest}`);\n}\n"],"sourceRoot":"webpack:///"}