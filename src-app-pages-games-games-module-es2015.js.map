{"version":3,"sources":["./src/app/pages/games/games.module.ts","./src/app/pages/games/games.component.ts","./src/app/pages/games/games.component.html"],"names":[],"mappings":"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","file":"src-app-pages-games-games-module-es2015.js","sourcesContent":["import {NgModule} from '@angular/core';\nimport {GamesComponent} from './games.component';\nimport {RouterModule, Routes} from '@angular/router';\nimport {CoreModule} from '@core/core.module';\n\nconst routes: Routes = [\n  { path: '', component: GamesComponent }\n];\n\n@NgModule({\n  declarations: [GamesComponent],\n  imports: [\n    CoreModule,\n    RouterModule.forChild(routes),\n  ]\n})\nexport class GamesModule { }\n\n","import {Component, OnDestroy, OnInit} from '@angular/core';\nimport {AngularFirestore} from '@angular/fire/firestore';\nimport {JbProfileService} from '@core/common/jb-profile.service';\nimport {AngularFireAuth} from '@angular/fire/auth';\nimport {JbConfirmService, JbGrowlService, JbListHandler, ListStatus} from 'jb-ui-lib';\nimport {EGameStatus, StoreService} from '@core/store/store.service';\nimport {strToDate} from '@core/core-lib/helpers';\nimport {Router} from \"@angular/router\";\n\n@Component({\n  selector: 'jb-games',\n  templateUrl: './games.component.html',\n  styleUrls: ['./games.component.scss']\n})\nexport class GamesComponent implements OnInit, OnDestroy {\n  public status = ListStatus;\n  public sub;\n  public REQUESTED = EGameStatus.REQUESTED;\n\n  public gamesList = new JbListHandler({\n    listName: 'games-list',\n    filterFields: ['playerName1', 'playerName2'],\n    orderFields: ['reqTime'],\n    orderReverse: true,\n    rowsPerPage: 10,\n    // data$: this.store.games$,\n    // status$: of(this.status.LOADED)\n  });\n\n  constructor(\n    private profile: JbProfileService,\n    private afAuth: AngularFireAuth,\n    private afs: AngularFirestore,\n    private growl: JbGrowlService,\n    public store: StoreService,\n    public router: Router,\n    private confirm: JbConfirmService,\n  ) {}\n\n  ngOnInit() {\n    this.sub = this.store.games$.subscribe(games => {\n      this.gamesList.load(games.map(game => {\n        return { ...game,\n          reqTime: strToDate(game.requestDate).getTime(),\n          canJoin: this.store.canJoinGame(game),\n          canPlay: this.store.canPlayGame(game),\n        };\n      }));\n      console.log('gamesList', this.gamesList.loadedList);\n    })\n  }\n\n  ngOnDestroy() { this.sub.unsubscribe(); }\n\n  newGame() {\n    this.store.newGame().then(game => {\n      this.growl.success('view.games.request_send');\n      console.log('game', game);\n      this.showLink(game);\n    });\n  }\n\n  showLink(game) {\n    this.confirm.open({\n      title         : 'view.game.details',\n      htmlContent   : `Use this link to join as <b>Player1</b>:<br>\n                       http:\\\\\\\\127.0.0.1:4200\\\\game\\\\${game.id}\\\\${game.token1}<br><br>\n                       Or use this link to join as <b>Player2</b>:<br>\n                       http:\\\\\\\\127.0.0.1:4200\\\\game\\\\${game.id}\\\\${game.token2}`,\n      yesButtonText : 'view.common.ok',\n      showNo        : false,\n      showCancel    : false,\n    })\n  }\n\n\n  deleteGame(game) {\n    this.confirm.open({ title: 'Remove Game' }).then(res => {\n      if (res === 'yes') { this.store.deleteGame(game.id); }\n    })\n  }\n\n}\n","<h1 translate>view.games.title</h1>\n\n<div class=\"row whiteBg padB10\">\n  <jb-input class=\"col-md-7\"\n            jbIcon=\"icon-search\"\n            jbPlaceholder=\"view.common.search\"\n            [jbAutoFocus]=\"true\"\n            [(ngModel)]=\"gamesList.filterText\"\n            (ngModelChange)=\"gamesList.filter($event)\">\n  </jb-input>\n  <div class=\"col-md-5 marB15 text-right\">\n    <jb-btn jbType=\"add\" jbText=\"view.games.new_game\" (jbClick)=\"newGame()\"></jb-btn>\n  </div>\n</div>\n\n<div class=\"row\" [show]=\"gamesList.loadingStatus <= status.LOADING || gamesList.totalFiltered > 0\">\n  <div class=\"col-12\">\n    <ul class=\"list-unstyled table-list\">\n      <li class=\"list-header\">\n        <jb-list-header-col class=\"col-3\"  colTitle=\"view.games.request_date\" fieldName=\"reqTime\"     [orderConf]=\"gamesList.orderConf\"></jb-list-header-col>\n        <jb-list-header-col class=\"col-2\"  colTitle=\"view.common.status\"      fieldName=\"status\"      [orderConf]=\"gamesList.orderConf\"></jb-list-header-col>\n        <jb-list-header-col class=\"col-2\"  colTitle=\"view.games.player1\"      fieldName=\"playerName1\" [orderConf]=\"gamesList.orderConf\"></jb-list-header-col>\n        <jb-list-header-col class=\"col-2\"  colTitle=\"view.games.player2\"      fieldName=\"playerName2\" [orderConf]=\"gamesList.orderConf\"></jb-list-header-col>\n      </li>\n\n      <jb-list-placeholder [show]=\"gamesList.loadingStatus <= status.LOADING\" [jbColumns]=\"[3, 2, 3, 3, 1]\"></jb-list-placeholder>\n      <li class=\"list-row\" [show]=\"gamesList.loadingStatus > status.LOADING\" *ngFor=\"let game of gamesList.renderList$ | async\">\n        <div class=\"col-3\">{{game.requestDate}}</div>\n        <div class=\"col-2\">{{game.status}}</div>\n        <div class=\"col-2\">{{game.playerName1}}</div>\n        <div class=\"col-2\">{{game.playerName2}}</div>\n        <div class=\"col-3 text-right\">\n          <!--<jb-btn *ngIf=\"game.canJoin\" (jbClick)=\"joinGame(game)\"-->\n          <!--        jbType=\"add\" jbText=\"view.common.join\">-->\n          <!--</jb-btn>-->\n          <jb-btn jbType=\"delete-icon\" (jbClick)=\"deleteGame(game)\"></jb-btn>\n          <jb-btn jbType=\"view-icon\" (jbClick)=\"showLink(game)\"></jb-btn>\n          <jb-btn (jbClick)=\"router.navigate(['game/', game.id, game.token1])\"\n                  jbType=\"update\" jbText=\"view.common.go\">\n          </jb-btn>\n        </div>\n      </li>\n    </ul>\n  </div>\n</div>\n\n<div class=\"row whiteBg\" [show]=\"gamesList.totalFiltered > 5\">\n  <jb-list-paginator class=\"col-12 mobile-sm\" [jbCtrl]=\"gamesList\" jbShowSelector=\"true\"></jb-list-paginator>\n</div>\n<div class=\"row whiteBg\" [show]=\"gamesList.loadingStatus > status.LOADING && gamesList.totalFiltered === 0\">\n  <jb-no-data class=\"col-12\" [jbIsPlaceholder]=\"true\"\n              jbIcon=\"icon-finish\" jbTitle=\"view.games.no_games\">\n  </jb-no-data>\n</div>\n"],"sourceRoot":"webpack:///"}